openapi: 3.0.0
info:
  title: Jobs-API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-nodejs-27f950ed4ea0.herokuapp.com/api
  variables: {}
paths:
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create a job
      operationId: Createajob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateajobRequest'
              - example:
                  company: IKEA
                  position: front-end developer
            example:
              company: IKEA
              position: front-end developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get All your Jobs
      operationId: GetAllyourJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Job ID
    get:
      tags:
      - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []

    patch:
      tags:
      - Jobs
      summary: Update A Job by id
      operationId: UpdateAJobbyid
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateAJobbyidRequest'
              - example:
                  company: AITU
                  position: cooker
            example:
              company: AITU
              position: cooker
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete A Job by id
      operationId: DeleteAJobbyid
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginRequest'
              - example:
                  email: ermek.tolebi@bk.ru
                  password: Aa0303
            example:
              email: ermek.tolebi@bk.ru
              password: Aa0303
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterRequest'
              - example:
                  name: peter
                  email: ermek.peter@bk.ru
                  password: Aa0303
            example:
              name: peter
              email: ermek.peter@bk.ru
              password: Aa0303
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    CreateajobRequest:
      title: CreateajobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: IKEA
        position: front-end developer
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: ermek.tolebi@bk.ru
        password: Aa0303
    RegisterRequest:
      title: RegisterRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: peter
        email: ermek.peter@bk.ru
        password: Aa0303
    UpdateAJobbyidRequest:
      title: UpdateAJobbyidRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: AITU
        position: cooker
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Jobs
  description: ''
- name: Auth
  description: ''
